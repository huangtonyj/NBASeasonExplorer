{"version":3,"sources":["components/DataInput.js","components/HomeOrAwayRadioBtns.js","components/TeamsCheckBox.js","components/Chart.js","components/App.js","index.js"],"names":["DataInput","_ref","handleDataInput","react_default","a","createElement","rows","cols","placeholder","onChange","e","HomeOrAwayRadioBtns","homeOrAway","handleHomeOrAwayRadioBtns","type","name","value","checked","TeamsCheckBox","data","handleTeamSelect","teamsCheckBox","Object","keys","map","team","key","target","Chart","selectedTeams","plotData","Array","from","forEach","filteredData","filter","game","assign","defineProperty","ScatterLines","Scatter","fill","line","ScatterChart","width","height","XAxis","dataKey","domain","tickFormatter","unixTime","moment","format","YAxis","Legend","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","split","rowData","date","visitorTeam","visitorPts","homeTeam","homePts","result","i","length","Date","getTime","push","pts","opponent","undefined","parseData","state","has","delete","add","input","Set","id","className","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7e2b47c7.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function DataInput({handleDataInput}) {\n  return (\n    <textarea\n      rows = \"2\"\n      cols = \"30\"\n      placeholder = \"Input data here\"\n      onChange = {(e) => handleDataInput(e)} \n    />\n  )\n}\n","import React from 'react'\n\nexport default function HomeOrAwayRadioBtns({\n  homeOrAway, handleHomeOrAwayRadioBtns\n}) {  \n  return (\n    <div>\n      <input type=\"radio\" name=\"homeOrAway\" \n        value=\"both\" \n        checked={homeOrAway === \"both\" ? \"checked\" : \"\"}\n        onChange={(e) => handleHomeOrAwayRadioBtns(e)}\n        />Both <br/>\n\n      <input type=\"radio\" name=\"homeOrAway\" \n        value=\"home\" \n        checked={homeOrAway === \"home\" ? \"checked\" : \"\"}\n        onChange={(e) => handleHomeOrAwayRadioBtns(e)}\n        />Home <br/>\n\n      <input type=\"radio\" name=\"homeOrAway\" \n        value=\"away\" \n        checked={homeOrAway === \"away\" ? \"checked\" : \"\"}\n        onChange={(e) => handleHomeOrAwayRadioBtns(e)}\n      />Away\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function TeamsCheckBox({data, handleTeamSelect}) {\n\n  const teamsCheckBox = Object.keys(data).map(team => {\n    return (\n      <div key = {team} >\n        <input\n          type = \"checkbox\"\n          name = {team}\n          value = {team}\n          onChange = {(e) => handleTeamSelect(e.target.value)}\n        />{team}\n      </div>\n    )\n  }); \n\n  return (\n    <div>\n      {teamsCheckBox}\n    </div>\n  )\n}\n","import React from 'react'\nimport {ScatterChart, XAxis, YAxis, Scatter, Legend} from 'recharts';\nimport moment from 'moment';\n\nexport default function Chart({selectedTeams, homeOrAway, data}) {\n\n  // Restructure and filter data for plotting\n  let plotData = {};\n  Array.from(selectedTeams).forEach(team => {\n    let filteredData = data[team];\n    if (homeOrAway !== 'both') {\n      filteredData = filteredData.filter(game => game.homeOrAway === homeOrAway);\n    }\n    plotData = Object.assign(plotData, {\n      [team]: filteredData\n    });\n  });\n\n  // Generate scattered lines for each selected team\n  const ScatterLines = Array.from(selectedTeams).map((team) => {\n    return (\n      <Scatter\n        key={team}\n        name={team}\n        data={plotData[team]}\n        fill=\"#8884d8\"\n        line\n      />\n    )\n  });\n\n  return (\n    <ScatterChart width={700} height={600}>\n\n      <XAxis\n        dataKey='date'\n        domain={['auto', 'auto']}\n        name='Date'\n        tickFormatter={(unixTime) => moment(unixTime).format('MMM Do YY')}\n        type='number'\n      />\n\n      <YAxis dataKey=\"pts\"/>\n\n      <Legend/>\n\n      {ScatterLines}\n      \n    </ScatterChart>\n  )\n}\n","import React, { Component } from 'react';\nimport DataInput from './DataInput';\nimport HomeOrAwayRadioBtns from './HomeOrAwayRadioBtns';\nimport TeamsCheckBox from './TeamsCheckBox';\nimport Chart from './Chart';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      data: {},\n      selectedTeams: new Set(),\n      homeOrAway: 'both',\n    }\n  }\n\n  // Parse input data\n  handleDataInput = (event) => {\n    function parseData(data) {\n      data = data.split('\\n');\n\n      const result = {};\n      let rowData, date, visitorTeam, visitorPts, homeTeam, homePts;\n\n      for (let i = 1; i < data.length; i++) {\n        rowData = data[i].split(',');\n        date = new Date(rowData[0]).getTime();\n        visitorTeam = rowData[2];\n        visitorPts = rowData[3]\n        homeTeam = rowData[4];\n        homePts = rowData[5];\n\n        if (!result[visitorTeam]) { result[visitorTeam] = []}\n        if (!result[homeTeam]) { result[homeTeam] = []}\n\n        result[visitorTeam].push({date: date, pts: visitorPts, homeOrAway: 'away', opponent: homeTeam}) \n        result[homeTeam].push({ date: date, pts: homePts, homeOrAway: 'home', opponent: visitorTeam}) \n      }\n\n      delete result[undefined] // bad data?\n      return result;\n    }\n\n    this.setState({data: parseData(event.target.value)});\n  }\n\n  // Set filter options\n  handleHomeOrAwayRadioBtns = (e) => { this.setState({homeOrAway: e.target.value}); }\n\n  // Checkboxes for team selection\n  handleTeamSelect = (team) => {\n    const selectedTeams = this.state.selectedTeams\n    selectedTeams.has(team) ? selectedTeams.delete(team) : selectedTeams.add(team)\n    this.setState({selectedTeams: selectedTeams});\n  }\n\n  render() {\n    return (\n      <div id='App'>\n        \n\n        <div className=\"controls\">\n        <DataInput handleDataInput = {this.handleDataInput}/>\n\n        <HomeOrAwayRadioBtns\n          homeOrAway={this.state.homeOrAway}\n          handleHomeOrAwayRadioBtns = {this.handleHomeOrAwayRadioBtns}\n          />\n\n        <TeamsCheckBox\n          data={this.state.data}\n          handleTeamSelect={this.handleTeamSelect}\n          />\n        </div>\n\n        <Chart\n          selectedTeams={this.state.selectedTeams}\n          homeOrAway={this.state.homeOrAway}\n          data={this.state.data}\n        />\n\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}